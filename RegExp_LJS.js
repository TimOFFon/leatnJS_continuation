
//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================

//                   Объект RegExp

//                     Введение

//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================

/*
            Два синтаксиса - короткий и длинный.
*/
// Длинный:--------------------------------------------
// Позволяет создать динамическую строку
{
    let regexp = new RegExp('шаблон', 'ig');
}


//Короткий:-------------------------------------------
// Статичен, не возможно изменить
{
    let regexp = /шаблон/; // без флагов
    let regexp2 = /шаблон/gmi; // с флагами gmi
}


//Пример динамической генерации регулярного выражения:
//------------------------------------------------------
{
    // let tag = prompt("Какой тег вы хотите найти?", "h2");
    // let regexp = new RegExp(`<${tag}>`);
    //то же, что /<h2>/  при ответе "h2" на prompt выше
}





//========================================================
//========================================================
//========================================================

//                       ФЛАГИ

//========================================================
//========================================================
//========================================================
/*

                i     - поиск без регистра


                g     - все совпадения


                m     - многострочный режим


                s     - "точка" любой символ


                u     - вкл юникод


                y     - на конкретной позиции

*/





//========================================================
//========================================================
//========================================================

//                  Поиск: str.match

//========================================================
//========================================================
//========================================================
/*
           str.match(regexp)    - для строки str возврщает
                                  совпадение в регулярке
*/

//------------------------------------------------------
//---------------------- ТРИ РЕЖИМА --------------------

/*                      ----- 1 -----

      С флагом << g >> возвращает массив всех сопадений
*/
{
    let str = 'Соседи странные, непонятные соседи, боятся'

    // console.log(str.match(/соседи/gi));
    // ['Соседи', 'соседи']
}


/*                     ------ 2 ------

      Без флага <<g>> возвращает только первое совпадение
      в виде массива (со скобочными группами), в котором:
                        
                    arr[0]  - всё совпадние

                    arr[1]  - (первые скобки)

                    arr.length  - длинна

                    arr.index   - позиция совпадения

                    arr.input   - исходная строка
*/
{
    let str = 'Опасения, вызывают опасения';
    let result = str.match(/опасения/i);

    // console.log(result[0]); // 'Опасения'
    // console.log(result.length); // 1
    // console.log(result.index); // 0
    // console.log(result.input); // 'Опасения, вы..ния'
}


/*               ------ 3 ------

    null - Возвращает null, если совпадений вообще нет.

    Возвращает не массив а null, для получения массива
    использовать логический оператор.
*/
{
    // let matches = 'JavaScript'.match(/HTML/) || [];

    // if(!matches.length) {
    //     console.log('Совпадений нет');
    // }
}





//========================================================
//========================================================
//========================================================

//                  Замена: str.replace

//========================================================
//========================================================
//========================================================

/*
              str.replace(regexp, replacement)
   
        Заменяет совпадения с regexp в строке str на 
replacement (все если есть флаг g, иначе только первое)
*/
{
    // без флага g
    // console.log('We will, we will'.replace(/we/i, 'I'));
    // I will, we will

    // с флагом g
    // console.log('We will, we will'.replace(/we/ig, 'I'));
    // I will, I will
}


//======================================================
//======================================================

//            Специальные комбинации символов

//               в строке  replacement

//======================================================
//======================================================
/*
      СПЕЦСИМВОЛЫ           ДЕЙСТВИЕ В СТРОКЕ ЗАМЕНЫ
-------------------------------------------------------

        $&           встовляет все найденное совпадение

        $`           вставляет часть строки до совпад

        $'           вставляет часть строки после сов

        $n           если n это 1-2 значное число, 
                     вставляет содержимое скобочной
                     группы рег. выражения

      $<name>        вставляет содержимое скобочной 
                     группы с именем name

        $$           вставляет символ '$'
*/
//=====================================================
//                      ПРИМЕРЫ
//====================================================
{
    // Пример с $& (ВСЁ)
// console.log('Люблю мясо'.replace(/мясо/, '$& и овощи'));
// Люблю мясо и овощи

// Пример с $` (ДО)
// let str1 = 'Ненавижу одиночество';
// console.log(str1.replace(/Ненавижу/, '$` Люблю'));
//

// Пример с $' (ПОСЛЕ)
// let str2 = 'Ненавижу одиночество';
// console.log(str2.replace(/Ненавижу/, "$' Люблю"));
// одиночество Люблю одиночество
}





//========================================================
//========================================================
//========================================================

//                  Проверка: regexp.test

//========================================================
//========================================================
//========================================================

/*
        regexp.test(str) - роверяет, если ли хоть одно
                           совпадение, если да, то
                           возвращает true, иначе 
                           false
*/
{
    let str = 'Я УчУ JavaScript';
    let regexp = /учу/i;

    // console.log(regexp.test(str)); // true
}