//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================

//                   Объект RegExp

//         Экранирование, специальные символы

//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
/*
            Для поиска специальных символов 
     
               [ ] \ ^ $ . | ? * + ( )
     
 , нам нужно добавить перед ними \ («экранировать их»).


Нам также нужно экранировать /, если мы используем 
/.../ (но не new RegExp).


        При передаче строки в new RegExp нужно 
        удваивать обратную косую черту: 

       \\ для экранирования специальных символов, 
    потому что строковые кавычки «съедят» одну черту.
*/
//=====================================================
//                      ПРИМЕРЫ
//=====================================================
{
    // экранирование точки
    // console.log( "Глава 5.1".match(/\d\.\d/) ); 
    // 5.1 (совпадение!)

    // ищет именно точку, не класс "."
    // console.log( "Глава 511".match(/\d\.\d/) ); 
    // null ("\." - ищет обычную точку)

    // экранирование скобок
    // console.log( "function g()".match(/g\(\)/) ); 
    // "g()"

    // поиск обратной косой черты
    // console.log("1\\2".match(/\\/)); 
    // '\\'

    // поиск косой черты
    // console.log( "/".match(/\//) ); 
    // '/'

    //  в RegExp ничего экранировать не надо
    // кроме обратной косой черты
    // console.log( "/".match(new RegExp("/")) ); 
    // находит /

    // если экранировать как обычно
    let regexp = new RegExp("\d\.\d");
    // console.log( "Глава 5.1".match(regexp) ); 
    // null

    //строка съедает обратную косую черту
    // console.log("\d\.\d"); // d.d (нет косой черты)
    // console.log("\n"); // перенос  (нет косой черты)
    // console.log("\u1234"); //  ሴ (нет косой черты)

    // задваеваем братную косую черту
    let regStr = "\\d\\.\\d";
    // console.log(regStr); 
    // \d\.\d (теперь правильно)

    let regexp2 = new RegExp(regStr);
    // console.log( "Глава 5.1".mastch(regexp2) ); 
    // 5.1   
}



//===================================================
//===================================================
//===================================================
//                    ПОВТОРЕНИЕ
//===================================================
//===================================================
//===================================================

/*             Экранирование в шаблоне:

               [ ] \ ^ $ . | ? * + ( )

*/

/*            Экранирование в конструкторе

                         \

*/