//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================

//                   Объект RegExp

//           Квантификаторы +, *, ? и {n}

//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
//=====================================================
/*
         Количество {n}  - квантификатор указывает
                           искомое количество 
                           элементов


            \d{5}       - обозначает 5 цифр, эквивале-
                          нтен \d\d\d\d\d


           \b\d{5}\b    - исключение чисел длинее 5


       Диапазон: {3,5}, от 3 до 5

          
            \d{3,}     - длина 3 и более



========================================================
                   КОРОТКИЕ ОБОЗНАЕНИЯ
========================================================

        +     - «один или более» 
                То же самое, что и {1,}
                \d+ находит числа 
                (из одной или более цифр)

        ?     - «ноль или один»
                То же самое, что и {0,1}. 
                Делает символ необязательным.


        *     - «ноль или более»
                То же самое, что и {0,}.
                символ может повторяться много 
                раз или вообще отсутствовать
 */


//======================================================
//======================================================
//======================================================
//                       ПРИМЕРЫ
//======================================================
//======================================================
//======================================================

// Поиск всех ЧИСЕЛ в строке
{
    let str = '+7(903)-123-45-67';
    let reg = /\d+/g;
    let reg2 = /\d{1,}/g;

    // console.log(str.match(reg));
    //['7', '903', '123', '45', '67']

    // console.log(str.match(reg2));
    //['7', '903', '123', '45', '67']
}
//-----------------------------------------------------

// Поиск энного количества знаков числа
{
    let str = '+7(903)-123-45-67';
    let reg = /\d{3}/g;

    // console.log(str.match(reg));
    // ['903', '123']
}
//----------------------------------------------------

// Поиск чисел в диапазоне
{
    let str = '123, 4444, 11, 3, 66677, 333, 7894567';
    let reg = /\b\d{2,3}\b/g;

    // console.log(str.match(reg));
    //['123', '11', '333']
}
//---------------------------------------------------

// Квантификатор (+) "Один или больше"
{
    let str = '11, 000, 1, 110, 0011, 111';
    let reg = /\b1+\b/g;

    // console.log(str.match(reg));
    //['11', '1', '111']
}
//---------------------------------------------------

// квантификатор (?) «ноль или один»
{
    let str = 'color или colour';
    let reg = /colou?r/g;

    let str2 = 'мозг, мозги, мозгоправ, мозгодел';
    let reg2 = /мозги?\,/g;

    // console.log(str.match(reg));
    //['color', 'colour']

    // console.log(str2.match(reg2));
    //['мозг,', 'мозги,']
}
//----------------------------------------------------

// квантификатор (*) «ноль или более»
{
    let str = "100 10 1";
    let reg = /10*/g;

    // console.log(str.match(reg));
    //['100', '10', '1']
}
//---------------------------------------------------

// поиск десятичных дробей
{
    let str = '0 1 12.345 7890';
    let reg = /\d+\.\d+/g;

    let str2 = '0, 1, 12.345, 7890, 0.1';
    let reg2 = /\d+\.\d+/g;

    // console.log(str.match(reg));
    //['12.345']

    // console.log(str2.match(reg2));
    //['12.345', '0.1']
}
//-------------------------------------------------

// поиск открывающего тега
{
    let str = '<body> ... </body> ... <h1> ... </h1>';
    let reg = /<[a-z][a-z0-9]*>/ig;

    // console.log(str.match(reg));
    //['<body>', '<h1>']
}
//-------------------------------------------------

// поиск всех тегов
{
    let str = '<body> ... </body> ... <h1> ... </h1>';
    let reg = /<\/?[a-z][a-z0-9]*>/ig;

    // console.log(str.match(reg));
    //['<body>', '</body>', '<h1>', '</h1>']
}